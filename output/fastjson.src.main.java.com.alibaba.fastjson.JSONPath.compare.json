{
    "original": {
        "method_name": "compare",
        "code": "static int compare(Object a,Object b){  if (a.getClass() == b.getClass()) {    return ((Comparable)a).compareTo(b);  }  Class typeA=a.getClass();  Class typeB=b.getClass();  if (typeA == BigDecimal.class) {    if (typeB == Integer.class) {      b=new BigDecimal((Integer)b);    } else     if (typeB == Long.class) {      b=new BigDecimal((Long)b);    } else     if (typeB == Float.class) {      b=new BigDecimal((Float)b);    } else     if (typeB == Double.class) {      b=new BigDecimal((Double)b);    }  } else   if (typeA == Long.class) {    if (typeB == Integer.class) {      b=new Long((Integer)b);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Long)a);    } else     if (typeB == Float.class) {      a=new Float((Long)a);    } else     if (typeB == Double.class) {      a=new Double((Long)a);    }  } else   if (typeA == Integer.class) {    if (typeB == Long.class) {      a=new Long((Integer)a);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Integer)a);    } else     if (typeB == Float.class) {      a=new Float((Integer)a);    } else     if (typeB == Double.class) {      a=new Double((Integer)a);    }  } else   if (typeA == Double.class) {    if (typeB == Integer.class) {      b=new Double((Integer)b);    } else     if (typeB == Long.class) {      b=new Double((Long)b);    } else     if (typeB == Float.class) {      b=new Double((Float)b);    }  } else   if (typeA == Float.class) {    if (typeB == Integer.class) {      b=new Float((Integer)b);    } else     if (typeB == Long.class) {      b=new Float((Long)b);    } else     if (typeB == Double.class) {      a=new Double((Float)a);    }  }  return ((Comparable)a).compareTo(b);}",
        "extraction_name": null,
        "predictions": [
            "compareObjects",
            "compareObjects",
            "compareObjects"
        ],
        "similarities": [
            0.6688986928560502,
            0.6688986928560502,
            0.6688986928560502
        ],
        "file_name": "fastjson.src.main.java.com.alibaba.fastjson.JSONPath.compare.Original.java"
    },
    "extractions": [
        {
            "method_name": "compare",
            "code": "static int compare(Object a,Object b){  if (a.getClass() == b.getClass()) {    return ((Comparable)a).compareTo(b);  }  Class typeA=a.getClass();  Class typeB=b.getClass();  if (typeA == BigDecimal.class) {    if (typeB == Integer.class) {      b=new BigDecimal((Integer)b);    } else     if (typeB == Long.class) {      b=new BigDecimal((Long)b);    } else     if (typeB == Float.class) {      b=new BigDecimal((Float)b);    } else     if (typeB == Double.class) {      b=new BigDecimal((Double)b);    }  } else   if (typeA == Long.class) {    if (typeB == Integer.class) {      b=new Long((Integer)b);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Long)a);    } else     if (typeB == Float.class) {      a=new Float((Long)a);    } else     if (typeB == Double.class) {      a=new Double((Long)a);    }  } else   if (typeA == Integer.class) {    if (typeB == Long.class) {      a=new Long((Integer)a);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Integer)a);    } else     if (typeB == Float.class) {      a=new Float((Integer)a);    } else     if (typeB == Double.class) {      a=new Double((Integer)a);    }  } else   if (typeA == Double.class) {    b=compare_extraction_3(b,typeB);  } else   if (typeA == Float.class) {    if (typeB == Integer.class) {      b=new Float((Integer)b);    } else     if (typeB == Long.class) {      b=new Float((Long)b);    } else     if (typeB == Double.class) {      a=new Double((Float)a);    }  }  return ((Comparable)a).compareTo(b);}",
            "extraction_name": "Extraction1",
            "prediction": "compareExtraction3",
            "similarity": null,
            "file_name": "fastjson.src.main.java.com.alibaba.fastjson.JSONPath.compare.Extraction1.java",
            "updated_code": "static int compare(Object a,Object b){  if (a.getClass() == b.getClass()) {    return ((Comparable)a).compareTo(b);  }  Class typeA=a.getClass();  Class typeB=b.getClass();  if (typeA == BigDecimal.class) {    if (typeB == Integer.class) {      b=new BigDecimal((Integer)b);    } else     if (typeB == Long.class) {      b=new BigDecimal((Long)b);    } else     if (typeB == Float.class) {      b=new BigDecimal((Float)b);    } else     if (typeB == Double.class) {      b=new BigDecimal((Double)b);    }  } else   if (typeA == Long.class) {    if (typeB == Integer.class) {      b=new Long((Integer)b);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Long)a);    } else     if (typeB == Float.class) {      a=new Float((Long)a);    } else     if (typeB == Double.class) {      a=new Double((Long)a);    }  } else   if (typeA == Integer.class) {    if (typeB == Long.class) {      a=new Long((Integer)a);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Integer)a);    } else     if (typeB == Float.class) {      a=new Float((Integer)a);    } else     if (typeB == Double.class) {      a=new Double((Integer)a);    }  } else   if (typeA == Double.class) {    b=compareExtraction3(b,typeB);  } else   if (typeA == Float.class) {    if (typeB == Integer.class) {      b=new Float((Integer)b);    } else     if (typeB == Long.class) {      b=new Float((Long)b);    } else     if (typeB == Double.class) {      a=new Double((Float)a);    }  }  return ((Comparable)a).compareTo(b);}"
        },
        {
            "method_name": "compare",
            "code": "static int compare(Object a,Object b){  if (a.getClass() == b.getClass()) {    return ((Comparable)a).compareTo(b);  }  Class typeA=a.getClass();  Class typeB=b.getClass();  if (typeA == BigDecimal.class) {    if (typeB == Integer.class) {      b=new BigDecimal((Integer)b);    } else     if (typeB == Long.class) {      b=new BigDecimal((Long)b);    } else     if (typeB == Float.class) {      b=new BigDecimal((Float)b);    } else     if (typeB == Double.class) {      b=new BigDecimal((Double)b);    }  } else   if (typeA == Long.class) {    if (typeB == Integer.class) {      b=new Long((Integer)b);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Long)a);    } else     if (typeB == Float.class) {      a=new Float((Long)a);    } else     if (typeB == Double.class) {      a=new Double((Long)a);    }  } else   if (typeA == Integer.class) {    a=compare_extraction_2(a,typeB);  } else   if (typeA == Double.class) {    b=compare_extraction_3(b,typeB);  } else   if (typeA == Float.class) {    if (typeB == Integer.class) {      b=new Float((Integer)b);    } else     if (typeB == Long.class) {      b=new Float((Long)b);    } else     if (typeB == Double.class) {      a=new Double((Float)a);    }  }  return ((Comparable)a).compareTo(b);}",
            "extraction_name": "Extraction2",
            "prediction": "compareExtraction2",
            "similarity": null,
            "file_name": "fastjson.src.main.java.com.alibaba.fastjson.JSONPath.compare.Extraction2.java",
            "updated_code": "static int compare(Object a,Object b){  if (a.getClass() == b.getClass()) {    return ((Comparable)a).compareTo(b);  }  Class typeA=a.getClass();  Class typeB=b.getClass();  if (typeA == BigDecimal.class) {    if (typeB == Integer.class) {      b=new BigDecimal((Integer)b);    } else     if (typeB == Long.class) {      b=new BigDecimal((Long)b);    } else     if (typeB == Float.class) {      b=new BigDecimal((Float)b);    } else     if (typeB == Double.class) {      b=new BigDecimal((Double)b);    }  } else   if (typeA == Long.class) {    if (typeB == Integer.class) {      b=new Long((Integer)b);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Long)a);    } else     if (typeB == Float.class) {      a=new Float((Long)a);    } else     if (typeB == Double.class) {      a=new Double((Long)a);    }  } else   if (typeA == Integer.class) {    a=compareExtraction2(a,typeB);  } else   if (typeA == Double.class) {    b=compareExtraction3(b,typeB);  } else   if (typeA == Float.class) {    if (typeB == Integer.class) {      b=new Float((Integer)b);    } else     if (typeB == Long.class) {      b=new Float((Long)b);    } else     if (typeB == Double.class) {      a=new Double((Float)a);    }  }  return ((Comparable)a).compareTo(b);}"
        },
        {
            "method_name": "compare",
            "code": "static int compare(Object a,Object b){  if (a.getClass() == b.getClass()) {    return ((Comparable)a).compareTo(b);  }  Class typeA=a.getClass();  Class typeB=b.getClass();  if (typeA == BigDecimal.class) {    b=compare_extraction_1(b,typeB);  } else   if (typeA == Long.class) {    if (typeB == Integer.class) {      b=new Long((Integer)b);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Long)a);    } else     if (typeB == Float.class) {      a=new Float((Long)a);    } else     if (typeB == Double.class) {      a=new Double((Long)a);    }  } else   if (typeA == Integer.class) {    a=compare_extraction_2(a,typeB);  } else   if (typeA == Double.class) {    b=compare_extraction_3(b,typeB);  } else   if (typeA == Float.class) {    if (typeB == Integer.class) {      b=new Float((Integer)b);    } else     if (typeB == Long.class) {      b=new Float((Long)b);    } else     if (typeB == Double.class) {      a=new Double((Float)a);    }  }  return ((Comparable)a).compareTo(b);}",
            "extraction_name": "Extraction3",
            "prediction": "compareExtraction1",
            "similarity": null,
            "file_name": "fastjson.src.main.java.com.alibaba.fastjson.JSONPath.compare.Extraction3.java",
            "updated_code": "static int compare(Object a,Object b){  if (a.getClass() == b.getClass()) {    return ((Comparable)a).compareTo(b);  }  Class typeA=a.getClass();  Class typeB=b.getClass();  if (typeA == BigDecimal.class) {    b=compareExtraction1(b,typeB);  } else   if (typeA == Long.class) {    if (typeB == Integer.class) {      b=new Long((Integer)b);    } else     if (typeB == BigDecimal.class) {      a=new BigDecimal((Long)a);    } else     if (typeB == Float.class) {      a=new Float((Long)a);    } else     if (typeB == Double.class) {      a=new Double((Long)a);    }  } else   if (typeA == Integer.class) {    a=compareExtraction2(a,typeB);  } else   if (typeA == Double.class) {    b=compareExtraction3(b,typeB);  } else   if (typeA == Float.class) {    if (typeB == Integer.class) {      b=new Float((Integer)b);    } else     if (typeB == Long.class) {      b=new Float((Long)b);    } else     if (typeB == Double.class) {      a=new Double((Float)a);    }  }  return ((Comparable)a).compareTo(b);}"
        }
    ],
    "file_name": null
}