{
    "original": {
        "method_name": "configureChart",
        "code": "public void configureChart(SourceBean content){  super.configureChart(content);  logger.debug(\"IN\");  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  SourceBean draws=(SourceBean)content.getAttribute(\"SERIES_DRAW\");  if (draws == null) {    draws=(SourceBean)content.getAttribute(\"CONF.SERIES_DRAW\");  }  seriesDraw=new LinkedHashMap();  if (draws != null) {    List atts=draws.getContainedAttributes();    String serieName=\"\";    String serieDraw=\"\";    for (Iterator iterator=atts.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      serieDraw=new String((String)object.getValue());      if (serieDraw.equalsIgnoreCase(\"line\")) {        seriesDraw.put(serieName,\"line\");      } else       if (serieDraw.equalsIgnoreCase(\"line_no_shapes\")) {        seriesDraw.put(serieName,\"line_no_shapes\");      } else {        seriesDraw.put(serieName,\"bar\");      }    }  }  if (confParameters.get(\"second_axis_label\") != null) {    secondAxisLabel=(String)confParameters.get(\"second_axis_label\");  }  SourceBean scales=(SourceBean)content.getAttribute(\"SERIES_SCALES\");  if (scales == null) {    scales=(SourceBean)content.getAttribute(\"CONF.SERIES_SCALES\");  }  seriesScale=new LinkedHashMap();  if (scales != null) {    List attsScales=scales.getContainedAttributes();    String serieName=\"\";    Integer serieScale=1;    for (Iterator iterator=attsScales.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      try {        String serieScaleS=(String)object.getValue();        serieScale=Integer.valueOf(serieScaleS);      } catch (      Exception e) {        logger.error(\"Not correct numebr scale; setting default 1\");        serieScale=Integer.valueOf(1);      }      if (serieScale.equals(2)) {        seriesScale.put(serieName,\"2\");      } else {        seriesScale.put(serieName,\"1\");      }    }  }  logger.debug(\"OUT\");}",
        "extraction_name": null,
        "predictions": [
            "configureChart_extractSerieScale",
            "configureChart_extractDrawsAndScales"
        ],
        "similarities": [
            0.8200225687996041,
            0.7806888794282122
        ],
        "file_name": "knowage-core.src.main.java.it.eng.spagobi.engines.chart.bo.charttypes.barcharts.CombinedCategoryBar.configureChart.Original.java"
    },
    "extractions": [
        {
            "method_name": "configureChart",
            "code": "public void configureChart(SourceBean content){  super.configureChart(content);  logger.debug(\"IN\");  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  SourceBean draws=(SourceBean)content.getAttribute(\"SERIES_DRAW\");  if (draws == null) {    draws=(SourceBean)content.getAttribute(\"CONF.SERIES_DRAW\");  }  seriesDraw=new LinkedHashMap();  if (draws != null) {    List atts=draws.getContainedAttributes();    String serieName=\"\";    String serieDraw=\"\";    for (Iterator iterator=atts.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      serieDraw=new String((String)object.getValue());      if (serieDraw.equalsIgnoreCase(\"line\")) {        seriesDraw.put(serieName,\"line\");      } else       if (serieDraw.equalsIgnoreCase(\"line_no_shapes\")) {        seriesDraw.put(serieName,\"line_no_shapes\");      } else {        seriesDraw.put(serieName,\"bar\");      }    }  }  if (confParameters.get(\"second_axis_label\") != null) {    secondAxisLabel=(String)confParameters.get(\"second_axis_label\");  }  SourceBean scales=(SourceBean)content.getAttribute(\"SERIES_SCALES\");  if (scales == null) {    scales=(SourceBean)content.getAttribute(\"CONF.SERIES_SCALES\");  }  seriesScale=new LinkedHashMap();  if (scales != null) {    List attsScales=scales.getContainedAttributes();    String serieName=\"\";    Integer serieScale=1;    for (Iterator iterator=attsScales.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      configureChart_extraction_2(serieName,object);    }  }  logger.debug(\"OUT\");}",
            "extraction_name": "Extraction1",
            "prediction": "configureChart_extractSerieScale",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.engines.chart.bo.charttypes.barcharts.CombinedCategoryBar.configureChart.Extraction1.java",
            "updated_code": "public void configureChart(SourceBean content){  super.configureChart(content);  logger.debug(\"IN\");  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  SourceBean draws=(SourceBean)content.getAttribute(\"SERIES_DRAW\");  if (draws == null) {    draws=(SourceBean)content.getAttribute(\"CONF.SERIES_DRAW\");  }  seriesDraw=new LinkedHashMap();  if (draws != null) {    List atts=draws.getContainedAttributes();    String serieName=\"\";    String serieDraw=\"\";    for (Iterator iterator=atts.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      serieDraw=new String((String)object.getValue());      if (serieDraw.equalsIgnoreCase(\"line\")) {        seriesDraw.put(serieName,\"line\");      } else       if (serieDraw.equalsIgnoreCase(\"line_no_shapes\")) {        seriesDraw.put(serieName,\"line_no_shapes\");      } else {        seriesDraw.put(serieName,\"bar\");      }    }  }  if (confParameters.get(\"second_axis_label\") != null) {    secondAxisLabel=(String)confParameters.get(\"second_axis_label\");  }  SourceBean scales=(SourceBean)content.getAttribute(\"SERIES_SCALES\");  if (scales == null) {    scales=(SourceBean)content.getAttribute(\"CONF.SERIES_SCALES\");  }  seriesScale=new LinkedHashMap();  if (scales != null) {    List attsScales=scales.getContainedAttributes();    String serieName=\"\";    Integer serieScale=1;    for (Iterator iterator=attsScales.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      configureChart_extractSerieScale(serieName,object);    }  }  logger.debug(\"OUT\");}"
        },
        {
            "method_name": "configureChart",
            "code": "public void configureChart(SourceBean content){  super.configureChart(content);  logger.debug(\"IN\");  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  SourceBean draws=(SourceBean)content.getAttribute(\"SERIES_DRAW\");  if (draws == null) {    draws=(SourceBean)content.getAttribute(\"CONF.SERIES_DRAW\");  }  configureChart_extraction_1(draws);  SourceBean scales=(SourceBean)content.getAttribute(\"SERIES_SCALES\");  if (scales == null) {    scales=(SourceBean)content.getAttribute(\"CONF.SERIES_SCALES\");  }  seriesScale=new LinkedHashMap();  if (scales != null) {    List attsScales=scales.getContainedAttributes();    String serieName=\"\";    Integer serieScale=1;    for (Iterator iterator=attsScales.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      configureChart_extraction_2(serieName,object);    }  }  logger.debug(\"OUT\");}",
            "extraction_name": "Extraction2",
            "prediction": "configureChart_extractDraws",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.engines.chart.bo.charttypes.barcharts.CombinedCategoryBar.configureChart.Extraction2.java",
            "updated_code": "public void configureChart(SourceBean content){  super.configureChart(content);  logger.debug(\"IN\");  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  if (confParameters.get(\"add_labels\") != null) {    String additional=(String)confParameters.get(\"add_labels\");    if (additional.equalsIgnoreCase(\"true\")) {      additionalLabels=true;      catSerLabels=new LinkedHashMap();    } else     additionalLabels=false;  } else {    additionalLabels=false;  }  SourceBean draws=(SourceBean)content.getAttribute(\"SERIES_DRAW\");  if (draws == null) {    draws=(SourceBean)content.getAttribute(\"CONF.SERIES_DRAW\");  }  configureChart_extractDraws(draws);  SourceBean scales=(SourceBean)content.getAttribute(\"SERIES_SCALES\");  if (scales == null) {    scales=(SourceBean)content.getAttribute(\"CONF.SERIES_SCALES\");  }  seriesScale=new LinkedHashMap();  if (scales != null) {    List attsScales=scales.getContainedAttributes();    String serieName=\"\";    Integer serieScale=1;    for (Iterator iterator=attsScales.iterator(); iterator.hasNext(); ) {      SourceBeanAttribute object=(SourceBeanAttribute)iterator.next();      serieName=new String(object.getKey());      configureChart_extractSerieScale(serieName,object);    }  }  logger.debug(\"OUT\");}"
        }
    ],
    "file_name": null
}