{
    "original": {
        "method_name": "getLastPointColor",
        "code": "public Paint getLastPointColor(){  logger.debug(\"IN\");  Color colorToReturn=null;  try {    final int last=lastIndexMonth;    TimeSeriesDataItem item=timeSeries.getDataItem(new Month(last,Integer.valueOf(lastYear).intValue()));    if (item == null || item.getValue() == null) {      return Color.WHITE;    }    Double currentValue=(Double)item.getValue();    TreeSet<Double> orderedThresholds=new TreeSet<Double>(thresholds.keySet());    Double thresholdGiveColor=null;    if (useTargets) {      boolean stop=false;      for (Iterator iterator=orderedThresholds.iterator(); iterator.hasNext() && stop == false; ) {        Double currentThres=(Double)iterator.next();        if (currentValue >= currentThres) {          thresholdGiveColor=currentThres;        } else {          stop=true;        }      }    } else     if (!useTargets) {      boolean stop=false;      for (Iterator iterator=orderedThresholds.iterator(); iterator.hasNext() && stop == false; ) {        Double currentThres=(Double)iterator.next();        if (currentValue > currentThres) {        } else {          stop=true;          thresholdGiveColor=currentThres;        }      }      if (stop == false) {        thresholdGiveColor=null;      }    }    if (thresholdGiveColor == null) {      if (bottomThreshold != null && bottomThreshold.getColor() != null)       colorToReturn=bottomThreshold.getColor(); else       colorToReturn=Color.GREEN;    } else {      TargetThreshold currThreshold=thresholds.get(thresholdGiveColor);      colorToReturn=currThreshold.getColor();      if (colorToReturn == null) {        colorToReturn=Color.BLACK;      }    }  } catch (  Exception e) {    logger.error(\"Exception while deifning last ponter color: set default green\",e);    return Color.GREEN;  }  logger.debug(\"OUT\");  return colorToReturn;}",
        "extraction_name": null,
        "predictions": [
            "getLastPointColor",
            "getLastPointColor"
        ],
        "similarities": [
            1.0,
            1.0
        ],
        "file_name": "knowage-core.src.main.java.it.eng.spagobi.engines.chart.bo.charttypes.targetcharts.SparkLine.getLastPointColor.Original.java"
    },
    "extractions": [
        {
            "method_name": "getLastPointColor",
            "code": "public Paint getLastPointColor(){  logger.debug(\"IN\");  Color colorToReturn=null;  try {    final int last=lastIndexMonth;    TimeSeriesDataItem item=timeSeries.getDataItem(new Month(last,Integer.valueOf(lastYear).intValue()));    if (item == null || item.getValue() == null) {      return Color.WHITE;    }    Double currentValue=(Double)item.getValue();    TreeSet<Double> orderedThresholds=new TreeSet<Double>(thresholds.keySet());    Double thresholdGiveColor=null;    if (useTargets) {      boolean stop=false;      for (Iterator iterator=orderedThresholds.iterator(); iterator.hasNext() && stop == false; ) {        Double currentThres=(Double)iterator.next();        if (currentValue >= currentThres) {          thresholdGiveColor=currentThres;        } else {          stop=true;        }      }    } else     if (!useTargets) {      thresholdGiveColor=getLastPointColor_extraction_2(currentValue,orderedThresholds,thresholdGiveColor);    }    if (thresholdGiveColor == null) {      if (bottomThreshold != null && bottomThreshold.getColor() != null)       colorToReturn=bottomThreshold.getColor(); else       colorToReturn=Color.GREEN;    } else {      TargetThreshold currThreshold=thresholds.get(thresholdGiveColor);      colorToReturn=currThreshold.getColor();      if (colorToReturn == null) {        colorToReturn=Color.BLACK;      }    }  } catch (  Exception e) {    logger.error(\"Exception while deifning last ponter color: set default green\",e);    return Color.GREEN;  }  logger.debug(\"OUT\");  return colorToReturn;}",
            "extraction_name": "Extraction1",
            "prediction": "getThresholdGiveColor",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.engines.chart.bo.charttypes.targetcharts.SparkLine.getLastPointColor.Extraction1.java",
            "updated_code": "public Paint getLastPointColor(){  logger.debug(\"IN\");  Color colorToReturn=null;  try {    final int last=lastIndexMonth;    TimeSeriesDataItem item=timeSeries.getDataItem(new Month(last,Integer.valueOf(lastYear).intValue()));    if (item == null || item.getValue() == null) {      return Color.WHITE;    }    Double currentValue=(Double)item.getValue();    TreeSet<Double> orderedThresholds=new TreeSet<Double>(thresholds.keySet());    Double thresholdGiveColor=null;    if (useTargets) {      boolean stop=false;      for (Iterator iterator=orderedThresholds.iterator(); iterator.hasNext() && stop == false; ) {        Double currentThres=(Double)iterator.next();        if (currentValue >= currentThres) {          thresholdGiveColor=currentThres;        } else {          stop=true;        }      }    } else     if (!useTargets) {      thresholdGiveColor=getThresholdGiveColor(currentValue,orderedThresholds,thresholdGiveColor);    }    if (thresholdGiveColor == null) {      if (bottomThreshold != null && bottomThreshold.getColor() != null)       colorToReturn=bottomThreshold.getColor(); else       colorToReturn=Color.GREEN;    } else {      TargetThreshold currThreshold=thresholds.get(thresholdGiveColor);      colorToReturn=currThreshold.getColor();      if (colorToReturn == null) {        colorToReturn=Color.BLACK;      }    }  } catch (  Exception e) {    logger.error(\"Exception while deifning last ponter color: set default green\",e);    return Color.GREEN;  }  logger.debug(\"OUT\");  return colorToReturn;}"
        },
        {
            "method_name": "getLastPointColor",
            "code": "public Paint getLastPointColor(){  logger.debug(\"IN\");  Color colorToReturn=null;  try {    final int last=lastIndexMonth;    TimeSeriesDataItem item=timeSeries.getDataItem(new Month(last,Integer.valueOf(lastYear).intValue()));    if (item == null || item.getValue() == null) {      return Color.WHITE;    }    Double currentValue=(Double)item.getValue();    TreeSet<Double> orderedThresholds=new TreeSet<Double>(thresholds.keySet());    Double thresholdGiveColor=null;    if (useTargets) {      boolean stop=false;      thresholdGiveColor=getLastPointColor_extraction_1(currentValue,orderedThresholds,thresholdGiveColor,stop);    } else     if (!useTargets) {      thresholdGiveColor=getLastPointColor_extraction_2(currentValue,orderedThresholds,thresholdGiveColor);    }    if (thresholdGiveColor == null) {      if (bottomThreshold != null && bottomThreshold.getColor() != null)       colorToReturn=bottomThreshold.getColor(); else       colorToReturn=Color.GREEN;    } else {      TargetThreshold currThreshold=thresholds.get(thresholdGiveColor);      colorToReturn=currThreshold.getColor();      if (colorToReturn == null) {        colorToReturn=Color.BLACK;      }    }  } catch (  Exception e) {    logger.error(\"Exception while deifning last ponter color: set default green\",e);    return Color.GREEN;  }  logger.debug(\"OUT\");  return colorToReturn;}",
            "extraction_name": "Extraction2",
            "prediction": "getThresholdGiveColor",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.engines.chart.bo.charttypes.targetcharts.SparkLine.getLastPointColor.Extraction2.java",
            "updated_code": "public Paint getLastPointColor(){  logger.debug(\"IN\");  Color colorToReturn=null;  try {    final int last=lastIndexMonth;    TimeSeriesDataItem item=timeSeries.getDataItem(new Month(last,Integer.valueOf(lastYear).intValue()));    if (item == null || item.getValue() == null) {      return Color.WHITE;    }    Double currentValue=(Double)item.getValue();    TreeSet<Double> orderedThresholds=new TreeSet<Double>(thresholds.keySet());    Double thresholdGiveColor=null;    if (useTargets) {      boolean stop=false;      thresholdGiveColor=getThresholdGiveColor(currentValue,orderedThresholds,thresholdGiveColor,stop);    } else     if (!useTargets) {      thresholdGiveColor=getThresholdGiveColor(currentValue,orderedThresholds,thresholdGiveColor);    }    if (thresholdGiveColor == null) {      if (bottomThreshold != null && bottomThreshold.getColor() != null)       colorToReturn=bottomThreshold.getColor(); else       colorToReturn=Color.GREEN;    } else {      TargetThreshold currThreshold=thresholds.get(thresholdGiveColor);      colorToReturn=currThreshold.getColor();      if (colorToReturn == null) {        colorToReturn=Color.BLACK;      }    }  } catch (  Exception e) {    logger.error(\"Exception while deifning last ponter color: set default green\",e);    return Color.GREEN;  }  logger.debug(\"OUT\");  return colorToReturn;}"
        }
    ],
    "file_name": null
}