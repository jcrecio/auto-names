{
    "original": {
        "method_name": "setParameterValues",
        "code": "public void setParameterValues(String userProvidedParametersStr,boolean transientMode){  logger.debug(\"IN\");  if (userProvidedParametersStr != null) {    ParameterValuesDecoder decoder=new ParameterValuesDecoder();    List biparameters=object.getDrivers();    if (biparameters == null) {      logger.error(\"BIParameters list cannot be null!!!\");      return;    }    userProvidedParametersStr=JavaScript.unescape(userProvidedParametersStr);    String[] userProvidedParameters=userProvidedParametersStr.split(\"&\");    for (int i=0; i < userProvidedParameters.length; i++) {      String[] chunks=userProvidedParameters[i].split(\"=\");      if (chunks == null || chunks.length > 2) {        logger.warn(\"User provided parameter [\" + userProvidedParameters[i] + \"] cannot be splitted in \"+ \"[parameter url name=parameter value] by '=' characters.\");        continue;      }      String parUrlName=chunks[0];      if (parUrlName == null || parUrlName.trim().equals(\"\"))       continue;      BIObjectParameter biparameter=null;      Iterator it=biparameters.iterator();      while (it.hasNext()) {        BIObjectParameter temp=(BIObjectParameter)it.next();        if (temp.getParameterUrlName().equals(parUrlName)) {          biparameter=temp;          break;        }      }      if (biparameter == null) {        logger.warn(\"No BIObjectParameter with url name = ['\" + parUrlName + \"'] was found.\");        continue;      }      String parValue=\"\";      if (chunks.length == 2) {        parValue=chunks[1];      }      if (parValue != null && parValue.equalsIgnoreCase(\"NULL\")) {        biparameter.setParameterValues(null);      } else {        List parameterValues=decoder.decode(parValue);        biparameter.setParameterValues(parameterValues);      }      biparameter.setTransientParmeters(transientMode);    }  }  logger.debug(\"OUT\");}",
        "extraction_name": null,
        "predictions": [
            "setParameterValue",
            "setParameterValueHelper"
        ],
        "similarities": [
            0.9424774969873195,
            0.8286700106503162
        ],
        "file_name": "knowage-core.src.main.java.it.eng.spagobi.analiticalmodel.document.handlers.ExecutionInstance.setParameterValues.Original.java"
    },
    "extractions": [
        {
            "method_name": "setParameterValues",
            "code": "public void setParameterValues(String userProvidedParametersStr,boolean transientMode){  logger.debug(\"IN\");  if (userProvidedParametersStr != null) {    ParameterValuesDecoder decoder=new ParameterValuesDecoder();    List biparameters=object.getDrivers();    if (biparameters == null) {      logger.error(\"BIParameters list cannot be null!!!\");      return;    }    userProvidedParametersStr=JavaScript.unescape(userProvidedParametersStr);    String[] userProvidedParameters=userProvidedParametersStr.split(\"&\");    for (int i=0; i < userProvidedParameters.length; i++) {      String[] chunks=userProvidedParameters[i].split(\"=\");      if (chunks == null || chunks.length > 2) {        logger.warn(\"User provided parameter [\" + userProvidedParameters[i] + \"] cannot be splitted in \"+ \"[parameter url name=parameter value] by '=' characters.\");        continue;      }      String parUrlName=chunks[0];      if (parUrlName == null || parUrlName.trim().equals(\"\"))       continue;      BIObjectParameter biparameter=null;      Iterator it=biparameters.iterator();      while (it.hasNext()) {        BIObjectParameter temp=(BIObjectParameter)it.next();        if (temp.getParameterUrlName().equals(parUrlName)) {          biparameter=temp;          break;        }      }      String parValue=setParameterValues_extraction_2(transientMode,decoder,chunks,parUrlName,biparameter);    }  }  logger.debug(\"OUT\");}",
            "extraction_name": "Extraction1",
            "prediction": "setParameterValue",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.analiticalmodel.document.handlers.ExecutionInstance.setParameterValues.Extraction1.java",
            "updated_code": "public void setParameterValues(String userProvidedParametersStr,boolean transientMode){  logger.debug(\"IN\");  if (userProvidedParametersStr != null) {    ParameterValuesDecoder decoder=new ParameterValuesDecoder();    List biparameters=object.getDrivers();    if (biparameters == null) {      logger.error(\"BIParameters list cannot be null!!!\");      return;    }    userProvidedParametersStr=JavaScript.unescape(userProvidedParametersStr);    String[] userProvidedParameters=userProvidedParametersStr.split(\"&\");    for (int i=0; i < userProvidedParameters.length; i++) {      String[] chunks=userProvidedParameters[i].split(\"=\");      if (chunks == null || chunks.length > 2) {        logger.warn(\"User provided parameter [\" + userProvidedParameters[i] + \"] cannot be splitted in \"+ \"[parameter url name=parameter value] by '=' characters.\");        continue;      }      String parUrlName=chunks[0];      if (parUrlName == null || parUrlName.trim().equals(\"\"))       continue;      BIObjectParameter biparameter=null;      Iterator it=biparameters.iterator();      while (it.hasNext()) {        BIObjectParameter temp=(BIObjectParameter)it.next();        if (temp.getParameterUrlName().equals(parUrlName)) {          biparameter=temp;          break;        }      }      String parValue=setParameterValue(transientMode,decoder,chunks,parUrlName,biparameter);    }  }  logger.debug(\"OUT\");}"
        },
        {
            "method_name": "setParameterValues",
            "code": "public void setParameterValues(String userProvidedParametersStr,boolean transientMode){  logger.debug(\"IN\");  if (userProvidedParametersStr != null) {    ParameterValuesDecoder decoder=new ParameterValuesDecoder();    List biparameters=object.getDrivers();    if (biparameters == null) {      logger.error(\"BIParameters list cannot be null!!!\");      return;    }    userProvidedParametersStr=JavaScript.unescape(userProvidedParametersStr);    String[] userProvidedParameters=userProvidedParametersStr.split(\"&\");    for (int i=0; i < userProvidedParameters.length; i++) {      String[] chunks=userProvidedParameters[i].split(\"=\");      if (chunks == null || chunks.length > 2) {        logger.warn(\"User provided parameter [\" + userProvidedParameters[i] + \"] cannot be splitted in \"+ \"[parameter url name=parameter value] by '=' characters.\");        continue;      }      String parUrlName=chunks[0];      if (parUrlName == null || parUrlName.trim().equals(\"\"))       continue;      BIObjectParameter biparameter=null;      Iterator it=biparameters.iterator();      biparameter=setParameterValues_extraction_1(parUrlName,biparameter,it);      String parValue=setParameterValues_extraction_2(transientMode,decoder,chunks,parUrlName,biparameter);    }  }  logger.debug(\"OUT\");}",
            "extraction_name": "Extraction2",
            "prediction": "setParameterValueHelper",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.analiticalmodel.document.handlers.ExecutionInstance.setParameterValues.Extraction2.java",
            "updated_code": "public void setParameterValues(String userProvidedParametersStr,boolean transientMode){  logger.debug(\"IN\");  if (userProvidedParametersStr != null) {    ParameterValuesDecoder decoder=new ParameterValuesDecoder();    List biparameters=object.getDrivers();    if (biparameters == null) {      logger.error(\"BIParameters list cannot be null!!!\");      return;    }    userProvidedParametersStr=JavaScript.unescape(userProvidedParametersStr);    String[] userProvidedParameters=userProvidedParametersStr.split(\"&\");    for (int i=0; i < userProvidedParameters.length; i++) {      String[] chunks=userProvidedParameters[i].split(\"=\");      if (chunks == null || chunks.length > 2) {        logger.warn(\"User provided parameter [\" + userProvidedParameters[i] + \"] cannot be splitted in \"+ \"[parameter url name=parameter value] by '=' characters.\");        continue;      }      String parUrlName=chunks[0];      if (parUrlName == null || parUrlName.trim().equals(\"\"))       continue;      BIObjectParameter biparameter=null;      Iterator it=biparameters.iterator();      biparameter=setParameterValueHelper(parUrlName,biparameter,it);      String parValue=setParameterValue(transientMode,decoder,chunks,parUrlName,biparameter);    }  }  logger.debug(\"OUT\");}"
        }
    ],
    "file_name": null
}