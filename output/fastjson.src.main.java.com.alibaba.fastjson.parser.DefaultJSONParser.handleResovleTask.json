{
    "original": {
        "method_name": "handleResovleTask",
        "code": "public void handleResovleTask(Object value){  if (resolveTaskList == null) {    return;  }  for (int i=0, size=resolveTaskList.size(); i < size; ++i) {    ResolveTask task=resolveTaskList.get(i);    String ref=task.referenceValue;    Object object=null;    if (task.ownerContext != null) {      object=task.ownerContext.object;    }    Object refValue;    if (ref.startsWith(\"$\")) {      refValue=getObject(ref);      if (refValue == null) {        try {          JSONPath jsonpath=new JSONPath(ref,SerializeConfig.getGlobalInstance(),config,true);          if (jsonpath.isRef()) {            refValue=jsonpath.eval(value);          }        } catch (        JSONPathException ex) {        }      }    } else {      refValue=task.context.object;    }    FieldDeserializer fieldDeser=task.fieldDeserializer;    if (fieldDeser != null) {      if (refValue != null && refValue.getClass() == JSONObject.class && fieldDeser.fieldInfo != null && !Map.class.isAssignableFrom(fieldDeser.fieldInfo.fieldClass)) {        Object root=this.contextArray[0].object;        JSONPath jsonpath=JSONPath.compile(ref);        if (jsonpath.isRef()) {          refValue=jsonpath.eval(root);        }      }      if (fieldDeser.getOwnerClass() != null && (!fieldDeser.getOwnerClass().isInstance(object)) && task.ownerContext.parent != null) {        for (ParseContext ctx=task.ownerContext.parent; ctx != null; ctx=ctx.parent) {          if (fieldDeser.getOwnerClass().isInstance(ctx.object)) {            object=ctx.object;            break;          }        }      }      fieldDeser.setValue(object,refValue);    }  }}",
        "extraction_name": null,
        "predictions": [
            "handleFieldDeserializer",
            "handleFieldDeserializer"
        ],
        "similarities": [
            0.539346385853891,
            0.539346385853891
        ],
        "file_name": "fastjson.src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.handleResovleTask.Original.java"
    },
    "extractions": [
        {
            "method_name": "handleResovleTask",
            "code": "public void handleResovleTask(Object value){  if (resolveTaskList == null) {    return;  }  for (int i=0, size=resolveTaskList.size(); i < size; ++i) {    ResolveTask task=resolveTaskList.get(i);    String ref=task.referenceValue;    Object object=null;    if (task.ownerContext != null) {      object=task.ownerContext.object;    }    Object refValue;    if (ref.startsWith(\"$\")) {      refValue=getObject(ref);      if (refValue == null) {        try {          JSONPath jsonpath=new JSONPath(ref,SerializeConfig.getGlobalInstance(),config,true);          if (jsonpath.isRef()) {            refValue=jsonpath.eval(value);          }        } catch (        JSONPathException ex) {        }      }    } else {      refValue=task.context.object;    }    FieldDeserializer fieldDeser=task.fieldDeserializer;    if (fieldDeser != null) {      handleResovleTask_extraction_2(task,ref,object,refValue,fieldDeser);    }  }}",
            "extraction_name": "Extraction1",
            "prediction": "handleFieldDeserializer",
            "similarity": null,
            "file_name": "fastjson.src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.handleResovleTask.Extraction1.java",
            "updated_code": "public void handleResovleTask(Object value){  if (resolveTaskList == null) {    return;  }  for (int i=0, size=resolveTaskList.size(); i < size; ++i) {    ResolveTask task=resolveTaskList.get(i);    String ref=task.referenceValue;    Object object=null;    if (task.ownerContext != null) {      object=task.ownerContext.object;    }    Object refValue;    if (ref.startsWith(\"$\")) {      refValue=getObject(ref);      if (refValue == null) {        try {          JSONPath jsonpath=new JSONPath(ref,SerializeConfig.getGlobalInstance(),config,true);          if (jsonpath.isRef()) {            refValue=jsonpath.eval(value);          }        } catch (        JSONPathException ex) {        }      }    } else {      refValue=task.context.object;    }    FieldDeserializer fieldDeser=task.fieldDeserializer;    if (fieldDeser != null) {      handleFieldDeserializer(task,ref,object,refValue,fieldDeser);    }  }}"
        },
        {
            "method_name": "handleResovleTask",
            "code": "public void handleResovleTask(Object value){  if (resolveTaskList == null) {    return;  }  for (int i=0, size=resolveTaskList.size(); i < size; ++i) {    ResolveTask task=resolveTaskList.get(i);    String ref=task.referenceValue;    Object object=null;    if (task.ownerContext != null) {      object=task.ownerContext.object;    }    Object refValue;    if (ref.startsWith(\"$\")) {      refValue=getObject(ref);      refValue=handleResovleTask_extraction_1(value,ref,refValue);    } else {      refValue=task.context.object;    }    FieldDeserializer fieldDeser=task.fieldDeserializer;    if (fieldDeser != null) {      handleResovleTask_extraction_2(task,ref,object,refValue,fieldDeser);    }  }}",
            "extraction_name": "Extraction2",
            "prediction": "getRefValue",
            "similarity": null,
            "file_name": "fastjson.src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.handleResovleTask.Extraction2.java",
            "updated_code": "public void handleResovleTask(Object value){  if (resolveTaskList == null) {    return;  }  for (int i=0, size=resolveTaskList.size(); i < size; ++i) {    ResolveTask task=resolveTaskList.get(i);    String ref=task.referenceValue;    Object object=null;    if (task.ownerContext != null) {      object=task.ownerContext.object;    }    Object refValue;    if (ref.startsWith(\"$\")) {      refValue=getObject(ref);      refValue=getRefValue(value,ref,refValue);    } else {      refValue=task.context.object;    }    FieldDeserializer fieldDeser=task.fieldDeserializer;    if (fieldDeser != null) {      handleFieldDeserializer(task,ref,object,refValue,fieldDeser);    }  }}"
        }
    ],
    "file_name": null
}