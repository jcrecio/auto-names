{
    "original": {
        "method_name": "addItemForJSTree",
        "code": "private void addItemForJSTree(StringBuffer htmlStream,LowFunctionality folder,BIObject obj,boolean isRoot,boolean isInitialPath,boolean isDefaultForNew){  logger.debug(\"IN\");  String nameLabel=folder.getName();  String name=msgBuilder.getMessage(nameLabel,\"messages\",httpRequest);  name=StringUtils.escapeForHtml(name);  String codeType=folder.getCodType();  Integer id=folder.getId();  Integer parentId=null;  if (isInitialPath)   parentId=new Integer(dTreeRootId); else   parentId=folder.getParentId();  if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {    if (isRoot) {      htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ dTreeRootId+ \",'\"+ name+ \"', '', '', '', '', '', 'true');\\n\");    } else {      if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {        String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolder.gif\",currTheme);        String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopen.gif\",currTheme);        try {          if (profile.isAbleToExecuteAction(SpagoBIConstants.DOCUMENT_MANAGEMENT_ADMIN) || ObjectsAccessVerifier.canDev(id,profile)) {            boolean checked=false;            if (obj != null) {              List funcs=obj.getFunctionalities();              if (funcs.contains(id) || isDefaultForNew) {                checked=true;              }            }            htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ parentId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '\"+ ObjectsTreeConstants.FUNCT_ID+ \"', '\"+ id+ \"',\"+ checked+ \");\\n\");          } else           if (ObjectsAccessVerifier.canExec(id,profile)) {            htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ parentId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '', '',false);\\n\");          }        } catch (        Exception ex) {          logger.error(\"Error in adding items \" + ex.getMessage());        }      }    }  }  if (codeType.equalsIgnoreCase(SpagoBIConstants.USER_FUNCTIONALITY_TYPE_CODE)) {    if (!privateFolderCreated) {      privateFolderCreated=true;      htmlStream.append(\"\ttreeFunctIns.add(\" + dMyFolderRootId + \", \"+ dTreeRootId+ \",'\"+ \"Personal Folders\"+ \"', '', '', '', '', '', false);\\n\");    }    String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderuser.gif\",currTheme);    String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopenuser.gif\",currTheme);    try {      if (profile.isAbleToExecuteAction(SpagoBIConstants.DOCUMENT_MANAGEMENT_ADMIN) || ObjectsAccessVerifier.canDev(id,profile)) {        boolean checked=false;        if (obj != null) {          List funcs=obj.getFunctionalities();          if (funcs.contains(id))           checked=true;        }        htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ dMyFolderRootId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '\"+ ObjectsTreeConstants.FUNCT_ID+ \"', '\"+ id+ \"',\"+ checked+ \");\\n\");      } else       if (ObjectsAccessVerifier.canExec(id,profile)) {        htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ parentId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '', '',false);\\n\");      }    } catch (    Exception ex) {      logger.error(\"Error in adding items \" + ex.getMessage());    }  }  logger.debug(\"OUT\");}",
        "extraction_name": null,
        "predictions": [
            "addUserFunctionalityItemForJSTree",
            "addItemForJSTree"
        ],
        "similarities": [
            0.9496861264861888,
            1.0
        ],
        "file_name": "knowage-core.src.main.java.it.eng.spagobi.analiticalmodel.functionalitytree.presentation.FunctionalitiesTreeInsertObjectHtmlGenerator.addItemForJSTree.Original.java"
    },
    "extractions": [
        {
            "method_name": "addItemForJSTree",
            "code": "private void addItemForJSTree(StringBuffer htmlStream,LowFunctionality folder,BIObject obj,boolean isRoot,boolean isInitialPath,boolean isDefaultForNew){  logger.debug(\"IN\");  String nameLabel=folder.getName();  String name=msgBuilder.getMessage(nameLabel,\"messages\",httpRequest);  name=StringUtils.escapeForHtml(name);  String codeType=folder.getCodType();  Integer id=folder.getId();  Integer parentId=null;  if (isInitialPath)   parentId=new Integer(dTreeRootId); else   parentId=folder.getParentId();  if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {    if (isRoot) {      htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ dTreeRootId+ \",'\"+ name+ \"', '', '', '', '', '', 'true');\\n\");    } else {      if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {        String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolder.gif\",currTheme);        String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopen.gif\",currTheme);        try {          if (profile.isAbleToExecuteAction(SpagoBIConstants.DOCUMENT_MANAGEMENT_ADMIN) || ObjectsAccessVerifier.canDev(id,profile)) {            boolean checked=false;            if (obj != null) {              List funcs=obj.getFunctionalities();              if (funcs.contains(id) || isDefaultForNew) {                checked=true;              }            }            htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ parentId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '\"+ ObjectsTreeConstants.FUNCT_ID+ \"', '\"+ id+ \"',\"+ checked+ \");\\n\");          } else           if (ObjectsAccessVerifier.canExec(id,profile)) {            htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ parentId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '', '',false);\\n\");          }        } catch (        Exception ex) {          logger.error(\"Error in adding items \" + ex.getMessage());        }      }    }  }  if (codeType.equalsIgnoreCase(SpagoBIConstants.USER_FUNCTIONALITY_TYPE_CODE)) {    if (!privateFolderCreated) {      privateFolderCreated=true;      htmlStream.append(\"\ttreeFunctIns.add(\" + dMyFolderRootId + \", \"+ dTreeRootId+ \",'\"+ \"Personal Folders\"+ \"', '', '', '', '', '', false);\\n\");    }    String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderuser.gif\",currTheme);    String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopenuser.gif\",currTheme);    addItemForJSTree_extraction_2(htmlStream,obj,name,id,parentId,imgFolder,imgFolderOp);  }  logger.debug(\"OUT\");}",
            "extraction_name": "Extraction1",
            "prediction": "addUserFunctionalityItemForJSTree",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.analiticalmodel.functionalitytree.presentation.FunctionalitiesTreeInsertObjectHtmlGenerator.addItemForJSTree.Extraction1.java",
            "updated_code": "private void addItemForJSTree(StringBuffer htmlStream,LowFunctionality folder,BIObject obj,boolean isRoot,boolean isInitialPath,boolean isDefaultForNew){  logger.debug(\"IN\");  String nameLabel=folder.getName();  String name=msgBuilder.getMessage(nameLabel,\"messages\",httpRequest);  name=StringUtils.escapeForHtml(name);  String codeType=folder.getCodType();  Integer id=folder.getId();  Integer parentId=null;  if (isInitialPath)   parentId=new Integer(dTreeRootId); else   parentId=folder.getParentId();  if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {    if (isRoot) {      htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ dTreeRootId+ \",'\"+ name+ \"', '', '', '', '', '', 'true');\\n\");    } else {      if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {        String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolder.gif\",currTheme);        String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopen.gif\",currTheme);        try {          if (profile.isAbleToExecuteAction(SpagoBIConstants.DOCUMENT_MANAGEMENT_ADMIN) || ObjectsAccessVerifier.canDev(id,profile)) {            boolean checked=false;            if (obj != null) {              List funcs=obj.getFunctionalities();              if (funcs.contains(id) || isDefaultForNew) {                checked=true;              }            }            htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ parentId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '\"+ ObjectsTreeConstants.FUNCT_ID+ \"', '\"+ id+ \"',\"+ checked+ \");\\n\");          } else           if (ObjectsAccessVerifier.canExec(id,profile)) {            htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ parentId+ \",'\"+ name+ \"', '', '', '', '\"+ imgFolder+ \"', '\"+ imgFolderOp+ \"', '', '', '', '',false);\\n\");          }        } catch (        Exception ex) {          logger.error(\"Error in adding items \" + ex.getMessage());        }      }    }  }  if (codeType.equalsIgnoreCase(SpagoBIConstants.USER_FUNCTIONALITY_TYPE_CODE)) {    if (!privateFolderCreated) {      privateFolderCreated=true;      htmlStream.append(\"\ttreeFunctIns.add(\" + dMyFolderRootId + \", \"+ dTreeRootId+ \",'\"+ \"Personal Folders\"+ \"', '', '', '', '', '', false);\\n\");    }    String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderuser.gif\",currTheme);    String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopenuser.gif\",currTheme);    addUserFunctionalityItemForJSTree(htmlStream,obj,name,id,parentId,imgFolder,imgFolderOp);  }  logger.debug(\"OUT\");}"
        },
        {
            "method_name": "addItemForJSTree",
            "code": "private void addItemForJSTree(StringBuffer htmlStream,LowFunctionality folder,BIObject obj,boolean isRoot,boolean isInitialPath,boolean isDefaultForNew){  logger.debug(\"IN\");  String nameLabel=folder.getName();  String name=msgBuilder.getMessage(nameLabel,\"messages\",httpRequest);  name=StringUtils.escapeForHtml(name);  String codeType=folder.getCodType();  Integer id=folder.getId();  Integer parentId=null;  if (isInitialPath)   parentId=new Integer(dTreeRootId); else   parentId=folder.getParentId();  if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {    if (isRoot) {      htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ dTreeRootId+ \",'\"+ name+ \"', '', '', '', '', '', 'true');\\n\");    } else {      if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {        String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolder.gif\",currTheme);        String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopen.gif\",currTheme);        addItemForJSTree_extraction_1(htmlStream,obj,isDefaultForNew,name,id,parentId,imgFolder,imgFolderOp);      }    }  }  if (codeType.equalsIgnoreCase(SpagoBIConstants.USER_FUNCTIONALITY_TYPE_CODE)) {    if (!privateFolderCreated) {      privateFolderCreated=true;      htmlStream.append(\"\ttreeFunctIns.add(\" + dMyFolderRootId + \", \"+ dTreeRootId+ \",'\"+ \"Personal Folders\"+ \"', '', '', '', '', '', false);\\n\");    }    String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderuser.gif\",currTheme);    String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopenuser.gif\",currTheme);    addItemForJSTree_extraction_2(htmlStream,obj,name,id,parentId,imgFolder,imgFolderOp);  }  logger.debug(\"OUT\");}",
            "extraction_name": "Extraction2",
            "prediction": "addLowFunctionalityItemForJSTree",
            "similarity": null,
            "file_name": "knowage-core.src.main.java.it.eng.spagobi.analiticalmodel.functionalitytree.presentation.FunctionalitiesTreeInsertObjectHtmlGenerator.addItemForJSTree.Extraction2.java",
            "updated_code": "private void addItemForJSTree(StringBuffer htmlStream,LowFunctionality folder,BIObject obj,boolean isRoot,boolean isInitialPath,boolean isDefaultForNew){  logger.debug(\"IN\");  String nameLabel=folder.getName();  String name=msgBuilder.getMessage(nameLabel,\"messages\",httpRequest);  name=StringUtils.escapeForHtml(name);  String codeType=folder.getCodType();  Integer id=folder.getId();  Integer parentId=null;  if (isInitialPath)   parentId=new Integer(dTreeRootId); else   parentId=folder.getParentId();  if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {    if (isRoot) {      htmlStream.append(\"\ttreeFunctIns.add(\" + id + \", \"+ dTreeRootId+ \",'\"+ name+ \"', '', '', '', '', '', 'true');\\n\");    } else {      if (codeType.equalsIgnoreCase(SpagoBIConstants.LOW_FUNCTIONALITY_TYPE_CODE)) {        String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolder.gif\",currTheme);        String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopen.gif\",currTheme);        addLowFunctionalityItemForJSTree(htmlStream,obj,isDefaultForNew,name,id,parentId,imgFolder,imgFolderOp);      }    }  }  if (codeType.equalsIgnoreCase(SpagoBIConstants.USER_FUNCTIONALITY_TYPE_CODE)) {    if (!privateFolderCreated) {      privateFolderCreated=true;      htmlStream.append(\"\ttreeFunctIns.add(\" + dMyFolderRootId + \", \"+ dTreeRootId+ \",'\"+ \"Personal Folders\"+ \"', '', '', '', '', '', false);\\n\");    }    String imgFolder=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderuser.gif\",currTheme);    String imgFolderOp=urlBuilder.getResourceLinkByTheme(httpRequest,\"/img/treefolderopenuser.gif\",currTheme);    addUserFunctionalityItemForJSTree(htmlStream,obj,name,id,parentId,imgFolder,imgFolderOp);  }  logger.debug(\"OUT\");}"
        }
    ],
    "file_name": null
}