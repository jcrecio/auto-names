{
    "original": {
        "method_name": "compile",
        "code": "/**  * Compile all of the compilable panes that're opened. * @param message if it should send a message saying it's compiled sucessfully. * @return true if no errors, false if it failed to compile. */public static boolean compile(boolean message,boolean successAlert){  BytecodeViewer.updateBusyStatus(true);  boolean noErrors=true;  boolean actuallyTried=false;  for (  java.awt.Component c : BytecodeViewer.viewer.workPane.getLoadedViewers()) {    if (c instanceof ClassViewer) {      ClassViewer cv=(ClassViewer)c;      if (noErrors && !cv.bytecodeViewPanel1.compile())       noErrors=false;      if (noErrors && !cv.bytecodeViewPanel2.compile())       noErrors=false;      if (noErrors && !cv.bytecodeViewPanel3.compile())       noErrors=false;      if (cv.bytecodeViewPanel1.textArea != null && cv.bytecodeViewPanel1.textArea.isEditable())       actuallyTried=true;      if (cv.bytecodeViewPanel2.textArea != null && cv.bytecodeViewPanel2.textArea.isEditable())       actuallyTried=true;      if (cv.bytecodeViewPanel3.textArea != null && cv.bytecodeViewPanel3.textArea.isEditable())       actuallyTried=true;    }  }  if (message) {    if (actuallyTried) {      if (noErrors && successAlert)       BytecodeViewer.showMessage(\"Compiled Successfully.\");    } else {      BytecodeViewer.showMessage(\"You have no editable panes opened, make one editable and try again.\");    }  }  BytecodeViewer.updateBusyStatus(false);  return true;}",
        "extraction_name": null,
        "predictions": [
            "compileOpenedPanes",
            "compileOpenPanes"
        ],
        "similarities": [
            0.5660172832264316,
            0.5355991313078643
        ],
        "file_name": "bytecode-viewer.src.main.java.the.bytecode.club.bytecodeviewer.BytecodeViewer.compile.Original.java"
    },
    "extractions": [
        {
            "method_name": "compile",
            "code": "/**  * Compile all of the compilable panes that're opened. * @param message if it should send a message saying it's compiled sucessfully. * @return true if no errors, false if it failed to compile. */public static boolean compile(boolean message,boolean successAlert){  BytecodeViewer.updateBusyStatus(true);  boolean noErrors=true;  boolean actuallyTried=false;  for (  java.awt.Component c : BytecodeViewer.viewer.workPane.getLoadedViewers()) {    if (c instanceof ClassViewer) {      ClassViewer cv=(ClassViewer)c;      if (noErrors && !cv.bytecodeViewPanel1.compile())       noErrors=false;      if (noErrors && !cv.bytecodeViewPanel2.compile())       noErrors=false;      if (noErrors && !cv.bytecodeViewPanel3.compile())       noErrors=false;      actuallyTried=compile_extraction_2(actuallyTried,cv);      if (cv.bytecodeViewPanel3.textArea != null && cv.bytecodeViewPanel3.textArea.isEditable())       actuallyTried=true;    }  }  if (message) {    if (actuallyTried) {      if (noErrors && successAlert)       BytecodeViewer.showMessage(\"Compiled Successfully.\");    } else {      BytecodeViewer.showMessage(\"You have no editable panes opened, make one editable and try again.\");    }  }  BytecodeViewer.updateBusyStatus(false);  return true;}",
            "extraction_name": "Extraction1",
            "prediction": "checkPanelEditableStatus",
            "similarity": null,
            "file_name": "bytecode-viewer.src.main.java.the.bytecode.club.bytecodeviewer.BytecodeViewer.compile.Extraction1.java",
            "updated_code": "/**  * Compile all of the compilable panes that're opened. * @param message if it should send a message saying it's compiled sucessfully. * @return true if no errors, false if it failed to compile. */public static boolean compile(boolean message,boolean successAlert){  BytecodeViewer.updateBusyStatus(true);  boolean noErrors=true;  boolean actuallyTried=false;  for (  java.awt.Component c : BytecodeViewer.viewer.workPane.getLoadedViewers()) {    if (c instanceof ClassViewer) {      ClassViewer cv=(ClassViewer)c;      if (noErrors && !cv.bytecodeViewPanel1.compile())       noErrors=false;      if (noErrors && !cv.bytecodeViewPanel2.compile())       noErrors=false;      if (noErrors && !cv.bytecodeViewPanel3.compile())       noErrors=false;      actuallyTried=checkPanelEditableStatus(actuallyTried,cv);      if (cv.bytecodeViewPanel3.textArea != null && cv.bytecodeViewPanel3.textArea.isEditable())       actuallyTried=true;    }  }  if (message) {    if (actuallyTried) {      if (noErrors && successAlert)       BytecodeViewer.showMessage(\"Compiled Successfully.\");    } else {      BytecodeViewer.showMessage(\"You have no editable panes opened, make one editable and try again.\");    }  }  BytecodeViewer.updateBusyStatus(false);  return true;}"
        },
        {
            "method_name": "compile",
            "code": "/**  * Compile all of the compilable panes that're opened. * @param message if it should send a message saying it's compiled sucessfully. * @return true if no errors, false if it failed to compile. */public static boolean compile(boolean message,boolean successAlert){  BytecodeViewer.updateBusyStatus(true);  boolean noErrors=true;  boolean actuallyTried=false;  for (  java.awt.Component c : BytecodeViewer.viewer.workPane.getLoadedViewers()) {    if (c instanceof ClassViewer) {      ClassViewer cv=(ClassViewer)c;      noErrors=compile_extraction_1(noErrors,cv);      actuallyTried=compile_extraction_2(actuallyTried,cv);      if (cv.bytecodeViewPanel3.textArea != null && cv.bytecodeViewPanel3.textArea.isEditable())       actuallyTried=true;    }  }  if (message) {    if (actuallyTried) {      if (noErrors && successAlert)       BytecodeViewer.showMessage(\"Compiled Successfully.\");    } else {      BytecodeViewer.showMessage(\"You have no editable panes opened, make one editable and try again.\");    }  }  BytecodeViewer.updateBusyStatus(false);  return true;}",
            "extraction_name": "Extraction2",
            "prediction": "compileClassViewerPanes",
            "similarity": null,
            "file_name": "bytecode-viewer.src.main.java.the.bytecode.club.bytecodeviewer.BytecodeViewer.compile.Extraction2.java",
            "updated_code": "/**  * Compile all of the compilable panes that're opened. * @param message if it should send a message saying it's compiled sucessfully. * @return true if no errors, false if it failed to compile. */public static boolean compile(boolean message,boolean successAlert){  BytecodeViewer.updateBusyStatus(true);  boolean noErrors=true;  boolean actuallyTried=false;  for (  java.awt.Component c : BytecodeViewer.viewer.workPane.getLoadedViewers()) {    if (c instanceof ClassViewer) {      ClassViewer cv=(ClassViewer)c;      noErrors=compileClassViewerPanes(noErrors,cv);      actuallyTried=checkPanelEditableStatus(actuallyTried,cv);      if (cv.bytecodeViewPanel3.textArea != null && cv.bytecodeViewPanel3.textArea.isEditable())       actuallyTried=true;    }  }  if (message) {    if (actuallyTried) {      if (noErrors && successAlert)       BytecodeViewer.showMessage(\"Compiled Successfully.\");    } else {      BytecodeViewer.showMessage(\"You have no editable panes opened, make one editable and try again.\");    }  }  BytecodeViewer.updateBusyStatus(false);  return true;}"
        }
    ],
    "file_name": null
}